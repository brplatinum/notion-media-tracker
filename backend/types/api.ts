/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/books/search": {
    get: {
      parameters: {
        query: {
          searchQuery?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["BookResults"];
          };
        };
      };
    };
  };
  "/books/add-to-shelf": {
    post: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["AddBookRequest"];
        };
      };
      responses: {
        /** @description Created */
        201: never;
      };
    };
  };
  "/books/read-next": {
    post: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["AddBookRequest"];
        };
      };
      responses: {
        /** @description Created */
        201: never;
      };
    };
  };
  "/books/finished": {
    post: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["FinishedBookRequest"];
        };
      };
      responses: {
        /** @description Created */
        201: never;
      };
    };
  };
  "/books/currently-reading": {
    post: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["AddBookRequest"];
        };
      };
      responses: {
        /** @description Created */
        201: never;
      };
    };
  };
  "/movies/search": {
    get: {
      parameters: {
        query: {
          searchQuery?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["MovieResults"];
          };
        };
      };
    };
  };
  "/movies/add-to-shelf": {
    post: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["AddMovieRequest"];
        };
      };
      responses: {
        /** @description Created */
        201: never;
      };
    };
  };
  "/movies/watch-next": {
    post: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["AddMovieRequest"];
        };
      };
      responses: {
        /** @description Created */
        201: never;
      };
    };
  };
  "/movies/finished": {
    post: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["FinishedMovieRequest"];
        };
      };
      responses: {
        /** @description Created */
        201: never;
      };
    };
  };
  "/movies/currently-watching": {
    post: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["AddMovieRequest"];
        };
      };
      responses: {
        /** @description Created */
        201: never;
      };
    };
  };
  "/tv/search": {
    get: {
      parameters: {
        query: {
          searchQuery?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["TvShowResults"];
          };
        };
      };
    };
  };
  "/tv/add-to-shelf": {
    post: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["AddTvShowRequest"];
        };
      };
      responses: {
        /** @description Created */
        201: never;
      };
    };
  };
  "/tv/watch-next": {
    post: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["AddTvShowRequest"];
        };
      };
      responses: {
        /** @description Created */
        201: never;
      };
    };
  };
  "/tv/finished": {
    post: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["FinishedTvShowRequest"];
        };
      };
      responses: {
        /** @description Created */
        201: never;
      };
    };
  };
  "/tv/currently-watching": {
    post: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["AddTvShowRequest"];
        };
      };
      responses: {
        /** @description Created */
        201: never;
      };
    };
  };
  "/setup": {
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["KeysNeeded"];
          };
        };
      };
    };
    post: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["KeySubmission"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["KeysNeeded"];
          };
        };
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    Book: {
      /** @example Book Title */
      title: string;
      /** @example Book Subtitle */
      subtitle?: string;
      /**
       * @example [
       *   "John Johnson",
       *   "James Jameson"
       * ]
       */
      authors?: (string)[];
      /** @example https://example.com/example.png */
      imgSrc?: string;
      /**
       * @example [
       *   "Fantasy",
       *   "Drama"
       * ]
       */
      genres?: (string)[];
      /**
       * @example [
       *   "isbn:101",
       *   "google:2000"
       * ]
       */
      ids: (string)[];
      /** @example 2012 */
      year?: string;
    };
    BookResults: (components["schemas"]["Book"])[];
    AddBookRequest: {
      book: components["schemas"]["Book"];
    };
    FinishedBookRequest: components["schemas"]["AddBookRequest"] & {
      /** @example 5 */
      rating: string;
    };
    Movie: {
      /** @example Movie Title */
      title: string;
      /**
       * @example [
       *   "John Johnson",
       *   "James Jameson"
       * ]
       */
      directors?: (string)[];
      /**
       * @example [
       *   "Mike Michaelson",
       *   "Samuel Samson"
       * ]
       */
      starring?: (string)[];
      /** @example https://example.com/example.png */
      imgSrc?: string;
      /**
       * @example [
       *   "tmdb:101",
       *   "imdb:2000"
       * ]
       */
      ids: (string)[];
      /** @example 2012 */
      year?: string;
    };
    MovieResults: (components["schemas"]["Movie"])[];
    AddMovieRequest: {
      movie: components["schemas"]["Movie"];
    };
    FinishedMovieRequest: components["schemas"]["AddMovieRequest"] & {
      /** @example 5 */
      rating: string;
    };
    TvShow: {
      /** @example Movie Title */
      title: string;
      /**
       * @example [
       *   "John Johnson",
       *   "James Jameson"
       * ]
       */
      creators?: (string)[];
      /**
       * @example [
       *   "Mike Michaelson",
       *   "Samuel Samson"
       * ]
       */
      starring?: (string)[];
      /** @example https://example.com/example.png */
      imgSrc?: string;
      /**
       * @example [
       *   "tmdb:101",
       *   "imdb:2000"
       * ]
       */
      ids: (string)[];
      /** @example 2012 */
      year?: string;
      /**
       * @example [
       *   "Crime",
       *   "Comedy"
       * ]
       */
      genres?: (string)[];
    };
    TvShowResults: (components["schemas"]["TvShow"])[];
    AddTvShowRequest: {
      tvShow: components["schemas"]["TvShow"];
    };
    FinishedTvShowRequest: components["schemas"]["AddTvShowRequest"] & {
      /** @example 5 */
      rating: string;
    };
    KeysNeeded: {
      keysNeeded?: ("NOTION_INTEGRATION_TOKEN" | "NOTION_DATABASE_ID" | "TMDB_TOKEN")[];
    };
    KeySubmission: {
      notionIntegrationToken?: string | null;
      notionDatabaseId?: string | null;
      tmdbToken?: string | null;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type external = Record<string, never>;

export type operations = Record<string, never>;
